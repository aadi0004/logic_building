#include <stdio.h>

int main() {
    int i=1;
    while(i<=5){
        printf("%d ",i);
            i++;

    }

    return 0;
}
---------------------------------------------------
#include <stdio.h>

int main() {
    int i=1;
    while(i<=10){
        printf("%d ",i);
            i++;

    }

    return 0;
}
-----------------------------------------------------
#include <stdio.h>

int main() {
    int i=23;
    while(i<=78){
        printf("%d ",i);
            i++;

    }

    return 0;
}
-------------------------------------------------------
#include <stdio.h>

int main() {
    int i=5;
    while(i>=1){
        printf("%d ",i);
            i--;

    }

    return 0;
}
-------------------------------------------------------------
#include <stdio.h>

int main() {
    int i=10;
    while(i>=1){
        printf("%d ",i);
            i--;

    }

    return 0;
}
-----------------------------------------------------------
#include <stdio.h>

int main() {
    int i=56;
    while(i>=23){
        printf("%d ",i);
            i--;

    }

    return 0;
}
-------------------------------------------------------
#include <stdio.h>

int main() {
    int i=5;
    while(i>=1){
        if(i%2==0){
            
        printf("%d ",i);
        }
            i--;

    }

    return 0;
}
-------------------------------------------------------------
#include <stdio.h>

int main() {
    int i=1;
    while(i<=10){
        if(i%2==0){
            
        printf("%d ",i);
        }
            i++;

    }

    return 0;
}
--------------------------------------------------------------
#include <stdio.h>

int main() {
    int i=45;
    while(i<=89){
        if(i%2==0){
            
        printf("%d ",i);
        }
            i++;

    }

    return 0;
}
-----------------------------------------------------------------
#include <stdio.h>

int main() {
    int i=45;
    while(i<=56){
        if(i%2!=0){
        printf("%d ",i);
        }
            i++;

    }

    return 0;
}
---------------------------------------------
#include <stdio.h>

int main() {
    int i=1;
    while(i<=10){
        if(i%2!=0){
        printf("%d ",i);
        }
            i++;

    }

    return 0;
}
---------------------------------------------------------
#include <stdio.h>

int main() {
    int i=1,sum=0;
    while(i<=10){
        if(i%2==0){
            sum=sum+i;
        }
            i++;
    }
    printf("%d ",sum);


    return 0;
}
-----------------------------------------------
#include <stdio.h>

int main() {
    int i=10,sum=0;
    while(i>=1){
        if(i%2!=0){
            sum=sum+i;
        }
            i--;
    }
    printf("%d ",sum);


    return 0;
}
------------------------------------------------------
#include <stdio.h>

int main() {
    char a;
    printf("enter a char (a,b,c,d,e) ");
    scanf("%c",&a);
    if(a=='a'){
        int i=45;
        while (i<=78){
            printf("%d ",i);
            i++;
        }
    }
    else if(a=='b'){
        int i=56;
        while (i>=34){
            printf("%d ",i);
            i--;
        }
    }
    else if(a=='c'){
        int i=23;
        while (i<=78){
            if(i%2==0){
            printf("%d ",i);
          }
            i++;
        }
    }
    else if(a=='d'){
        int i=89;
        while (i>=34){
            if(i%2!=0){
            printf("%d ",i);
          }
            i--;
        }
    }
    else if(a=='e'){
        int i=4,sum=0;
        while (i<=8){
            sum=sum+i;
              i++;
          }
        printf("%d ",sum);
        }
    
    
    

    return 0;
}
---------------------------------------------------------



1. A while loop is a control flow statement that repeatedly executes a block of code based on a condition
2. an if-else-if statement checks multiple conditions, while an if statement only checks one
3. In an entry control loop, the condition is checked before entering the loop (e.g., for and while loops). In an exit control loop, the condition is checked after executing the loop body at least once (e.g., do-while loop).
